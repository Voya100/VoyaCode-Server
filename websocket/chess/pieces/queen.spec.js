const { testMoveTiles } = require('../test-helpers');

describe('#Queen', function(){

  describe('moveTiles', function(){

    it('should work in center of the board', function(){
      testMoveTiles(4,3,[
        [' ' ,'X' ,' ' ,' ' ,'X' ,' ' ,' ' ,'X' ],
        [' ' ,'  ','X' ,' ' ,'X' ,' ' ,'X' ,' ' ],
        [' ' ,' ' ,' ' ,'X' ,'X' ,'X' ,' ' ,' ' ],
        ['X' ,'X' ,'X' ,'X' ,'WQ','X' ,'X' ,'X' ],
        [' ' ,' ' ,' ' ,'X' ,'X' ,'X' ,' ' ,' ' ],
        [' ' ,' ' ,'X' ,' ' ,'X' ,' ' ,'X' ,' ' ],
        [' ' ,'X' ,' ' ,' ' ,'X' ,' ' ,'  ','X' ],
        ['X' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,'  ']
      ]);
    });

    it('should work on corner of the board', function(){
      testMoveTiles(7,0,[
        ['X' ,'X' ,'X' ,'X' ,'X' ,'X' ,'X' ,'WQ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' '  ,'X',' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,'X' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,'X' ,' ' ,' ' ,' ' ,' ' ,'  ','X' ],
        ['X' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ]
      ]);
    });
    
    it('should work on edge of the board', function(){
      testMoveTiles(7,3,[
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' '  ,' ',' ' ,'X' ,'X' ],
        ['X' ,'X' ,'X' ,'X' ,'X' ,'X' ,'X' ,'WQ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,'  ','X' ],
        [' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ,'X']
      ]);
    });

    it('should not include friendly tiles', function(){
      testMoveTiles(4,3,[
        [' ' ,'X' ,' ' ,' ' ,'X' ,' ' ,' ' ,'X' ],
        [' ' ,'  ','X' ,' ' ,'X' ,' ' ,'X' ,' ' ],
        [' ' ,' ' ,' ' ,'X' ,'X' ,'X' ,' ' ,' ' ],
        ['WP','X' ,'X' ,'X' ,'WQ','X' ,'X' ,'X' ],
        [' ' ,' ' ,' ' ,'X' ,'X' ,'WP',' ' ,' ' ],
        [' ' ,' ' ,'X' ,' ' ,'WP',' ' ,' ' ,' ' ],
        [' ' ,'X' ,' ' ,' ' ,' ' ,' ' ,'  ',' ' ],
        ['X' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ']
      ]);
    });
    
    it('should include enemy tiles', function(){
      testMoveTiles(4,3,[
        [' ' ,'X' ,' ' ,' ' ,'X' ,' ' ,' ' ,'X' ],
        [' ' ,'  ','X' ,' ' ,'X' ,' ' ,'X' ,' ' ],
        [' ' ,' ' ,' ' ,'X' ,'X' ,'X' ,' ' ,' ' ],
        ['BP','X' ,'X' ,'X' ,'WQ','X' ,'X' ,'X' ],
        [' ' ,' ' ,' ' ,'X' ,'X' ,'BP',' ' ,' ' ],
        [' ' ,' ' ,'X' ,' ' ,'BP',' ' ,' ' ,' ' ],
        [' ' ,'X' ,' ' ,' ' ,' ' ,' ' ,'  ',' ' ],
        ['X' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ']
      ],[
        [' ' ,'X' ,' ' ,' ' ,'X' ,' ' ,' ' ,'X' ],
        [' ' ,'  ','X' ,' ' ,'X' ,' ' ,'X' ,' ' ],
        [' ' ,' ' ,' ' ,'X' ,'X' ,'X' ,' ' ,' ' ],
        ['X' ,'X' ,'X' ,'X' ,'WQ','X' ,'X' ,'X' ],
        [' ' ,' ' ,' ' ,'X' ,'X' ,'X' ,' ' ,' ' ],
        [' ' ,' ' ,'X' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        [' ' ,'X' ,' ' ,' ' ,' ' ,' ' ,'  ',' ' ],
        ['X' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ']
      ]);
    });
  });
});

