const { testMoveTiles } = require('../test-helpers');

describe('#Rook', function(){

  describe('moveTiles', function(){

    it('should work in center of the board', function(){
      testMoveTiles(4,3,[
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        [' ' ,'  ',' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        ['X' ,'X' ,'X' ,'X' ,'WR' ,'X' ,'X' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,'  ',' ' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,'  ']
      ]);
    });

    it('should work on corner of the board', function(){
      testMoveTiles(7,0,[
        ['X' ,'X' ,'X' ,'X' ,'X' ,'X' ,'X' ,'WR' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' '  ,' ',' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ','X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X']
      ]);
    });
    
    it('should work on edge of the board', function(){
      testMoveTiles(7,3,[
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' '  ,' ',' ' ,' ' ,'X' ],
        ['X' ,'X' ,'X' ,'X' ,'X' ,'X' ,'X' ,'WR' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ','X' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'X']
      ]);
    });

    it('should not include friendly tiles', function(){
      testMoveTiles(4,3,[
        [' ' ,' ' ,' ' ,' ' ,'' ,' ' ,' ' ,' ' ],
        [' ' ,'  ',' ' ,' ' ,'WP' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        ['X' ,'X' ,'X' ,'X' ,'WR' ,'X' ,'WX' ,'' ],
        [' ' ,' ' ,' ' ,' ' ,'WP' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ',' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ']
      ]);
    });
    
    it('should include enemy tiles', function(){
      testMoveTiles(4,3,[
        [' ' ,' ' ,' ' ,' ' ,'' ,' ' ,' ' ,' ' ],
        [' ' ,'  ',' ' ,' ' ,'WP' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        ['X' ,'X' ,'X' ,'X' ,'WR' ,'X' ,'BP' ,'' ],
        [' ' ,' ' ,' ' ,' ' ,'BP' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ',' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ']
      ],[
        [' ' ,' ' ,' ' ,' ' ,'' ,' ' ,' ' ,' ' ],
        [' ' ,'  ',' ' ,' ' ,'WP' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        ['X' ,'X' ,'X' ,'X' ,'WR' ,'X' ,'X' ,'' ],
        [' ' ,' ' ,' ' ,' ' ,'X' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ',' ' ],
        [' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,' ' ,'  ']
      ]);
    });
  });
});

